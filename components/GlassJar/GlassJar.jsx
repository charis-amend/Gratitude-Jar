/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export function Model(props) {
    const { nodes, materials } = useGLTF("/finaljar/finaljar.gltf");

    const groupRef = useRef();
    // Update rotation in the animation loop
    useFrame((state, delta) => {
        groupRef.current.rotation.x += 0.0 * delta; // Adjust speed as needed
        groupRef.current.rotation.y += 0.01 * delta;
        groupRef.current.rotation.z += 0.02 * delta;
    });

    const scale = [17, 17, 17];

    return (
        <group {...props} dispose={null} ref={groupRef} scale={scale}>
            <group name="scenegltf" userData={{ name: "scene.gltf" }}>
                <group
                    name="Sketchfab_model"
                    rotation={[-Math.PI / 2, 0, 0]}
                    userData={{ name: "Sketchfab_model" }}
                >
                    <group
                        name="Collada_visual_scene_group"
                        position={[1.047234, 2.8312823, 0]}
                        rotation={[Math.PI / 2, 0, 0]}
                        userData={{ name: "Collada visual scene group" }}
                    >
                        <mesh
                            name="defaultMaterial"
                            geometry={nodes.defaultMaterial.geometry}
                            material={materials.material_1}
                            userData={{ name: "defaultMaterial" }}
                        />
                        <mesh
                            name="defaultMaterial_1"
                            geometry={nodes.defaultMaterial_1.geometry}
                            material={materials.material}
                            userData={{ name: "defaultMaterial" }}
                        />
                    </group>
                </group>
            </group>
        </group>
    );
}

useGLTF.preload("/finaljar/finaljar.gltf");





// const baseMaterial = useRef(new MeshStandardMaterial({
//     transparent: true,
//     opacity: 0.5,
//     depthTest: false,
//     side: DoubleSide,
//     color: new Color(244, 247, 247),
//     roughness: 0.3,
//     metalness: 0.7,
// }))
// const lidMaterial = useRef(new MeshPhysicalMaterial({
//     // transparent: false,
//     // depthTest: true,
//     // depthWrite: true,
//     // side: BackSide,
//     // // color: new Color(68, 68, 68),
//     // color: new Color(1, 0, 0),
//     // emissive: new Color(35, 35, 35),
//     // roughness: 0.3,
//     color: "red",
//     metalness: 0.2,
//     roughness: 0,
//     clearcoat: 0.8,

// }))